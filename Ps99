local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=1;local v30;v27=v12(v11(v27,15 -10 ),v7("\83\181","\135\125\155\158\168\228\161"),function(v42) if (v9(v42,2)==79) then local v101=0;while true do if (v101==0) then v30=v8(v11(v42,1,1));return "";end end else local v102=0;local v103;while true do if (v102==0) then v103=v10(v8(v42,16));if v30 then local v131=0;local v132;while true do if (v131==0) then v132=v13(v103,v30);v30=nil;v131=1;end if (1==v131) then return v132;end end else return v103;end break;end end end end);local function v31(v43,v44,v45) if v45 then local v104=0;local v105;while true do if (v104==0) then v105=(v43/(2^(v44-1)))%(2^(((v45-1) -(v44-1)) + 1)) ;return v105-(v105%(2 -1)) ;end end else local v106=0;local v107;while true do if (v106==0) then v107=2^(v44-(1 -0)) ;return (((v43%(v107 + v107))>=v107) and 1) or 0 ;end end end end local function v32() local v46=v9(v27,v29,v29);v29=v29 + 1 ;return v46;end local function v33() local v47=0;local v48;local v49;while true do if (v47==0) then v48,v49=v9(v27,v29,v29 + 2 );v29=v29 + 2 ;v47=1;end if (v47==1) then return (v49 * 256) + v48 ;end end end local function v34() local v50=0;local v51;local v52;local v53;local v54;while true do if (v50==1) then return (v54 * (43216383 -26439167)) + (v53 * 65536) + (v52 * 256) + v51 ;end if (v50==0) then v51,v52,v53,v54=v9(v27,v29,v29 + 3 );v29=v29 + 4 ;v50=1;end end end local function v35() local v55=0;local v56;local v57;local v58;local v59;local v60;local v61;while true do if (v55==3) then if (v60==0) then if (v59==0) then return v61 * 0 ;else local v133=0;while true do if (v133==0) then v60=1;v58=0;break;end end end elseif (v60==2047) then return ((v59==0) and (v61 * (1/0))) or (v61 * NaN) ;end return v16(v61,v60-1023 ) * (v58 + (v59/(2^52))) ;end if (v55==1) then v58=620 -(555 + 64) ;v59=(v31(v57,1,20) * (2^(963 -(857 + 74)))) + v56 ;v55=2;end if (0==v55) then v56=v34();v57=v34();v55=1;end if (2==v55) then v60=v31(v57,21,31);v61=((v31(v57,32)==1) and  -1) or 1 ;v55=3;end end end local function v36(v62) local v63=0;local v64;local v65;while true do if (v63==2) then v65={};for v114=1, #v64 do v65[v114]=v10(v9(v11(v64,v114,v114)));end v63=3;end if (v63==1) then v64=v11(v27,v29,(v29 + v62) -1 );v29=v29 + v62 ;v63=2;end if (v63==0) then v64=nil;if  not v62 then local v120=0;while true do if (v120==0) then v62=v34();if (v62==0) then return "";end break;end end end v63=1;end if (v63==3) then return v14(v65);end end end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v66={};local v67={};local v68={};local v69={v66,v67,nil,v68};local v70=v34();local v71={};for v79=1,v70 do local v80=v32();local v81;if (v80==1) then v81=v32()~=0 ;elseif (v80==2) then v81=v35();elseif (v80==3) then v81=v36();end v71[v79]=v81;end v69[3]=v32();for v83=1,v34() do local v84=v32();if (v31(v84,1,1)==0) then local v110=v31(v84,2,3);local v111=v31(v84,572 -(367 + 201) ,6);local v112={v33(),v33(),nil,nil};if (v110==0) then v112[3]=v33();v112[4]=v33();elseif (v110==1) then v112[930 -(214 + 713) ]=v34();elseif (v110==2) then v112[3]=v34() -(2^16) ;elseif (v110==3) then local v136=0;while true do if (v136==0) then v112[3]=v34() -(2^16) ;v112[4]=v33();break;end end end if (v31(v111,1,1)==(1 + 0)) then v112[2]=v71[v112[2]];end if (v31(v111,2,2)==1) then v112[3]=v71[v112[3]];end if (v31(v111,3,3)==1) then v112[4]=v71[v112[4]];end v66[v83]=v112;end end for v85=1,v34() do v67[v85-1 ]=v39();end return v69;end local function v40(v73,v74,v75) local v76=v73[1];local v77=v73[2];local v78=v73[1 + 2 ];return function(...) local v87=v76;local v88=v77;local v89=v78;local v90=v38;local v91=1;local v92= -1;local v93={};local v94={...};local v95=v20("#",...) -1 ;local v96={};local v97={};for v108=0,v95 do if (v108>=v89) then v93[v108-v89 ]=v94[v108 + 1 ];else v97[v108]=v94[v108 + 1 ];end end local v98=(v95-v89) + (878 -(282 + 595)) ;local v99;local v100;while true do local v109=0;while true do if (v109==0) then v99=v87[v91];v100=v99[1];v109=1;end if (1==v109) then if (v100<=41) then if (v100<=20) then if (v100<=9) then if (v100<=4) then if (v100<=1) then if (v100>0) then local v139=0;local v140;local v141;local v142;while true do if (v139==1) then v142=v97[v140 + 2 ];if (v142>0) then if (v141>v97[v140 + 1 ]) then v91=v99[3];else v97[v140 + (1640 -(1523 + 114)) ]=v141;end elseif (v141<v97[v140 + 1 ]) then v91=v99[3];else v97[v140 + 3 ]=v141;end break;end if (v139==0) then v140=v99[2];v141=v97[v140];v139=1;end end else local v143=0;local v144;local v145;local v146;while true do if (v143==0) then v144=v88[v99[3]];v145=nil;v143=1;end if (v143==1) then v146={};v145=v18({},{[v7("\0\14\21\89\189\58\41","\217\95\81\124\55")]=function(v334,v335) local v336=0;local v337;while true do if (v336==0) then v337=v146[v335];return v337[1][v337[2]];end end end,[v7("\17\99\33\200\151\36\223\42\89\55","\177\78\60\79\173\224\77")]=function(v338,v339,v340) local v341=0;local v342;while true do if (v341==0) then v342=v146[v339];v342[1][v342[2]]=v340;break;end end end});v143=2;end if (2==v143) then for v343=1,v99[4] do local v344=0;local v345;while true do if (v344==0) then v91=v91 + 1 ;v345=v87[v91];v344=1;end if (1==v344) then if (v345[1 + 0 ]==44) then v146[v343-1 ]={v97,v345[3]};else v146[v343-1 ]={v74,v345[1068 -(68 + 997) ]};end v96[ #v96 + 1 ]=v146;break;end end end v97[v99[2]]=v40(v144,v145,v75);break;end end end elseif (v100<=2) then v97[v99[2]]=v97[v99[3]]%v97[v99[1274 -(226 + 1044) ]] ;elseif (v100>3) then if (v99[2]==v97[v99[4]]) then v91=v91 + (4 -3) ;else v91=v99[3];end else v97[v99[2]]={};end elseif (v100<=6) then if (v100>5) then if (v97[v99[2]]==v99[4]) then v91=v91 + (118 -(32 + 85)) ;else v91=v99[3];end else v97[v99[2]]= #v97[v99[3]];end elseif (v100<=7) then local v149=0;local v150;local v151;while true do if (v149==0) then v150=v99[2];v151=v97[v99[3]];v149=1;end if (v149==1) then v97[v150 + 1 ]=v151;v97[v150]=v151[v99[4]];break;end end elseif (v100==8) then v74[v99[3]]=v97[v99[2]];else v97[v99[2]]={};end elseif (v100<=14) then if (v100<=11) then if (v100>10) then if (v97[v99[2]]==v99[4]) then v91=v91 + 1 ;else v91=v99[3];end elseif (v97[v99[2 + 0 ]]<=v99[4]) then v91=v91 + 1 ;else v91=v99[3];end elseif (v100<=12) then v97[v99[2]]=v97[v99[3]] + v99[4] ;elseif (v100==13) then local v234=0;local v235;local v236;local v237;while true do if (v234==2) then for v388=1,v99[4] do local v389=0;local v390;while true do if (v389==1) then if (v390[1]==44) then v237[v388-(958 -(892 + 65)) ]={v97,v390[3]};else v237[v388-1 ]={v74,v390[3]};end v96[ #v96 + 1 ]=v237;break;end if (v389==0) then v91=v91 + 1 ;v390=v87[v91];v389=1;end end end v97[v99[2]]=v40(v235,v236,v75);break;end if (v234==1) then v237={};v236=v18({},{[v7("\212\121\198\69\42\129\71","\63\139\38\175\43\78\228")]=function(v391,v392) local v393=0;local v394;while true do if (0==v393) then v394=v237[v392];return v394[1][v394[1 + 1 ]];end end end,[v7("\61\186\192\93\21\140\192\92\7\157","\56\98\229\174")]=function(v395,v396,v397) local v398=0;local v399;while true do if (v398==0) then v399=v237[v396];v399[1][v399[2]]=v397;break;end end end});v234=2;end if (0==v234) then v235=v88[v99[3]];v236=nil;v234=1;end end else v74[v99[3]]=v97[v99[2]];end elseif (v100<=(30 -13)) then if (v100<=15) then local v153=0;local v154;while true do if (v153==0) then v154=v99[2];v97[v154]=v97[v154]();break;end end elseif (v100==16) then v97[v99[2]]();else local v240=0;local v241;local v242;while true do if (v240==1) then v97[v241 + 1 ]=v242;v97[v241]=v242[v99[4]];break;end if (v240==0) then v241=v99[3 -1 ];v242=v97[v99[3]];v240=1;end end end elseif (v100<=(368 -(87 + 263))) then v97[v99[2]]=v97[v99[3]]%v99[4] ;elseif (v100==19) then v97[v99[2]][v99[3]]=v97[v99[4]];else v97[v99[2]]=v97[v99[3]];end elseif (v100<=30) then if (v100<=25) then if (v100<=22) then if (v100==21) then local v156=0;local v157;local v158;local v159;while true do if (v156==0) then v157=v99[2];v158=v97[v157 + 2 ];v156=1;end if (2==v156) then if (v158>0) then if (v159<=v97[v157 + 1 ]) then local v421=0;while true do if (0==v421) then v91=v99[183 -(67 + 113) ];v97[v157 + 3 ]=v159;break;end end end elseif (v159>=v97[v157 + 1 ]) then local v422=0;while true do if (v422==0) then v91=v99[3];v97[v157 + 3 ]=v159;break;end end end break;end if (v156==1) then v159=v97[v157] + v158 ;v97[v157]=v159;v156=2;end end else v97[v99[2]]=v74[v99[3]];end elseif (v100<=23) then for v223=v99[2],v99[3] do v97[v223]=nil;end elseif (v100>24) then local v247=v99[2];v97[v247]=v97[v247](v21(v97,v247 + 1 ,v99[3]));else for v317=v99[2],v99[3] do v97[v317]=nil;end end elseif (v100<=27) then if (v100==26) then v97[v99[2]]=v97[v99[3]][v99[3 + 1 ]];else local v164=0;local v165;while true do if (v164==0) then v165=v99[2];v97[v165](v21(v97,v165 + 1 ,v92));break;end end end elseif (v100<=28) then local v166=v99[2];local v167,v168=v90(v97[v166](v21(v97,v166 + 1 ,v99[3])));v92=(v168 + v166) -1 ;local v169=0;for v225=v166,v92 do local v226=0;while true do if (v226==0) then v169=v169 + 1 ;v97[v225]=v167[v169];break;end end end elseif (v100==29) then local v249=0;local v250;local v251;local v252;while true do if (1==v249) then v252=v97[v250 + 2 ];if (v252>0) then if (v251>v97[v250 + 1 ]) then v91=v99[3];else v97[v250 + 3 ]=v251;end elseif (v251<v97[v250 + 1 ]) then v91=v99[7 -4 ];else v97[v250 + 3 ]=v251;end break;end if (v249==0) then v250=v99[2];v251=v97[v250];v249=1;end end else v97[v99[2]]=v97[v99[3]]%v97[v99[4]] ;end elseif (v100<=35) then if (v100<=32) then if (v100==31) then local v170=0;local v171;while true do if (v170==0) then v171=v99[2 + 0 ];v97[v171](v21(v97,v171 + (3 -2) ,v99[3]));break;end end else v97[v99[954 -(802 + 150) ]]();end elseif (v100<=33) then local v172=v99[2];do return v21(v97,v172,v92);end elseif (v100==34) then local v254=0;local v255;while true do if (v254==0) then v255=v99[2];v97[v255]=v97[v255](v21(v97,v255 + 1 ,v99[3]));break;end end else do return;end end elseif (v100<=(102 -64)) then if (v100<=36) then local v173=0;local v174;local v175;local v176;local v177;while true do if (v173==2) then for v349=v174,v92 do local v350=0;while true do if (v350==0) then v177=v177 + 1 ;v97[v349]=v175[v177];break;end end end break;end if (v173==1) then v92=(v176 + v174) -1 ;v177=0;v173=2;end if (v173==0) then v174=v99[3 -1 ];v175,v176=v90(v97[v174](v21(v97,v174 + 1 ,v99[3])));v173=1;end end elseif (v100==(27 + 10)) then v97[v99[2]]=v97[v99[3]] + v99[4] ;else do return;end end elseif (v100<=39) then local v178=0;local v179;while true do if (v178==0) then v179=v99[2];v97[v179]=v97[v179](v21(v97,v179 + 1 ,v92));break;end end elseif (v100>40) then if (v97[v99[2]]<=v99[1001 -(915 + 82) ]) then v91=v91 + (2 -1) ;else v91=v99[3];end else v91=v99[3];end elseif (v100<=62) then if (v100<=51) then if (v100<=46) then if (v100<=43) then if (v100>42) then local v180=v99[2];do return v97[v180](v21(v97,v180 + 1 ,v99[3]));end elseif  not v97[v99[2 + 0 ]] then v91=v91 + 1 ;else v91=v99[3 -0 ];end elseif (v100<=44) then v97[v99[2]]=v97[v99[1190 -(1069 + 118) ]];elseif (v100==45) then local v259=0;local v260;local v261;local v262;local v263;while true do if (0==v259) then v260=v99[2];v261,v262=v90(v97[v260](v97[v260 + 1 ]));v259=1;end if (v259==2) then for v400=v260,v92 do local v401=0;while true do if (v401==0) then v263=v263 + 1 ;v97[v400]=v261[v263];break;end end end break;end if (v259==1) then v92=(v262 + v260) -1 ;v263=0;v259=2;end end else local v264=0;local v265;local v266;local v267;while true do if (1==v264) then v267=v97[v265] + v266 ;v97[v265]=v267;v264=2;end if (v264==0) then v265=v99[4 -2 ];v266=v97[v265 + 2 ];v264=1;end if (2==v264) then if (v266>0) then if (v267<=v97[v265 + 1 ]) then local v449=0;while true do if (v449==0) then v91=v99[3];v97[v265 + (6 -3) ]=v267;break;end end end elseif (v267>=v97[v265 + 1 ]) then local v450=0;while true do if (v450==0) then v91=v99[3];v97[v265 + 3 ]=v267;break;end end end break;end end end elseif (v100<=48) then if (v100==47) then v97[v99[2]]=v99[3]~=(0 + 0) ;else v97[v99[2]]=v97[v99[3]]%v99[4] ;end elseif (v100<=49) then v91=v99[3];elseif (v100>50) then v97[v99[2]]=v99[4 -1 ];else v97[v99[2]]=v74[v99[3]];end elseif (v100<=56) then if (v100<=(53 + 0)) then if (v100==52) then local v186=v99[2];v97[v186](v97[v186 + 1 ]);else v97[v99[2]]=v97[v99[3]][v99[4]];end elseif (v100<=54) then local v189=0;local v190;while true do if (v189==0) then v190=v99[2];v97[v190](v21(v97,v190 + 1 ,v99[3]));break;end end elseif (v100==55) then local v272=0;local v273;local v274;local v275;local v276;while true do if (v272==1) then v92=(v275 + v273) -1 ;v276=0 -0 ;v272=2;end if (v272==0) then v273=v99[793 -(368 + 423) ];v274,v275=v90(v97[v273]());v272=1;end if (v272==2) then for v402=v273,v92 do local v403=0;while true do if (0==v403) then v276=v276 + 1 ;v97[v402]=v274[v276];break;end end end break;end end else local v277=0;local v278;local v279;while true do if (v277==0) then v278=v99[20 -(10 + 8) ];v279={};v277=1;end if (v277==1) then for v404=1, #v96 do local v405=0;local v406;while true do if (v405==0) then v406=v96[v404];for v460=0, #v406 do local v461=0;local v462;local v463;local v464;while true do if (1==v461) then v464=v462[2];if ((v463==v97) and (v464>=v278)) then local v478=0;while true do if (v478==0) then v279[v464]=v463[v464];v462[1]=v279;break;end end end break;end if (v461==0) then v462=v406[v460];v463=v462[1];v461=1;end end end break;end end end break;end end end elseif (v100<=59) then if (v100<=57) then v97[v99[7 -5 ]]=v99[3] + v97[v99[4]] ;elseif (v100==58) then local v280=0;local v281;while true do if (v280==0) then v281=v99[2];do return v97[v281](v21(v97,v281 + 1 ,v99[445 -(416 + 26) ]));end break;end end else local v282=0;local v283;local v284;local v285;local v286;while true do if (0==v282) then v283=v99[2];v284,v285=v90(v97[v283]());v282=1;end if (v282==2) then for v407=v283,v92 do local v408=0;while true do if (0==v408) then v286=v286 + 1 ;v97[v407]=v284[v286];break;end end end break;end if (v282==1) then v92=(v285 + v283) -1 ;v286=0;v282=2;end end end elseif (v100<=(191 -131)) then local v192=0;local v193;local v194;local v195;local v196;while true do if (v192==0) then v193=v99[2];v194,v195=v90(v97[v193](v21(v97,v193 + 1 ,v92)));v192=1;end if (v192==1) then v92=(v195 + v193) -1 ;v196=0;v192=2;end if (v192==2) then for v352=v193,v92 do local v353=0;while true do if (v353==0) then v196=v196 + 1 ;v97[v352]=v194[v196];break;end end end break;end end elseif (v100==61) then local v287=0;local v288;local v289;while true do if (v287==1) then for v409=v288 + 1 ,v92 do v15(v289,v97[v409]);end break;end if (v287==0) then v288=v99[2];v289=v97[v288];v287=1;end end elseif (v99[2]==v97[v99[4]]) then v91=v91 + 1 ;else v91=v99[3];end elseif (v100<=72) then if (v100<=67) then if (v100<=64) then if (v100==63) then local v197=0;local v198;local v199;local v200;local v201;while true do if (2==v197) then for v355=v198,v92 do local v356=0;while true do if (v356==0) then v201=v201 + 1 ;v97[v355]=v199[v201];break;end end end break;end if (v197==0) then v198=v99[2];v199,v200=v90(v97[v198](v21(v97,v198 + 1 ,v92)));v197=1;end if (1==v197) then v92=(v200 + v198) -1 ;v201=0;v197=2;end end else v97[v99[1 + 1 ]]=v75[v99[3]];end elseif (v100<=65) then local v204=0;local v205;local v206;while true do if (1==v204) then for v357=v205 + 1 ,v92 do v15(v206,v97[v357]);end break;end if (v204==0) then v205=v99[2];v206=v97[v205];v204=1;end end elseif (v100>66) then do return v97[v99[2]]();end else local v290=0;local v291;local v292;while true do if (v290==0) then v291=v99[2];v292={};v290=1;end if (v290==1) then for v410=1, #v96 do local v411=v96[v410];for v429=0, #v411 do local v430=0;local v431;local v432;local v433;while true do if (1==v430) then v433=v431[2];if ((v432==v97) and (v433>=v291)) then local v474=0;while true do if (v474==0) then v292[v433]=v432[v433];v431[1]=v292;break;end end end break;end if (v430==0) then v431=v411[v429];v432=v431[1];v430=1;end end end end break;end end end elseif (v100<=69) then if (v100>(119 -51)) then local v207=0;local v208;local v209;local v210;local v211;while true do if (v207==0) then v208=v99[2];v209,v210=v90(v97[v208](v97[v208 + 1 ]));v207=1;end if (v207==1) then v92=(v210 + v208) -1 ;v211=0;v207=2;end if (v207==2) then for v358=v208,v92 do local v359=0;while true do if (v359==0) then v211=v211 + 1 ;v97[v358]=v209[v211];break;end end end break;end end else local v212=0;local v213;while true do if (v212==0) then v213=v99[2];v97[v213]=v97[v213](v21(v97,v213 + 1 ,v92));break;end end end elseif (v100<=70) then v97[v99[440 -(145 + 293) ]]=v99[3];elseif (v100>71) then if v97[v99[2]] then v91=v91 + 1 ;else v91=v99[3];end else v97[v99[2]]=v75[v99[3]];end elseif (v100<=77) then if (v100<=74) then if (v100==73) then if  not v97[v99[2]] then v91=v91 + 1 ;else v91=v99[3];end else v97[v99[432 -(44 + 386) ]]=v99[3] + v97[v99[4]] ;end elseif (v100<=75) then local v217=0;local v218;while true do if (v217==0) then v218=v99[2];v97[v218](v21(v97,v218 + 1 ,v92));break;end end elseif (v100==(1562 -(998 + 488))) then if v97[v99[2]] then v91=v91 + 1 ;else v91=v99[3];end else v97[v99[2]]= #v97[v99[1 + 2 ]];end elseif (v100<=80) then if (v100<=78) then local v219=0;local v220;while true do if (v219==0) then v220=v99[2];do return v21(v97,v220,v92);end break;end end elseif (v100==79) then local v297=0;local v298;while true do if (0==v297) then v298=v99[2];v97[v298](v97[v298 + 1 ]);break;end end else v97[v99[2]]=v99[3]~=(0 + 0) ;end elseif (v100<=81) then v97[v99[2]][v99[3]]=v97[v99[4]];elseif (v100>82) then do return v97[v99[2]]();end else local v300=0;local v301;while true do if (v300==0) then v301=v99[2];v97[v301]=v97[v301]();break;end end end v91=v91 + (773 -(201 + 571)) ;break;end end end end;end return v40(v39(),{},v28)(...);end return vv17(),...);
